
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper functions
    function isAdmin() {
      // Check if the user's UID is in the list of admin UIDs.
      return request.auth.uid in ["2A71uIHMVPXVcp4zSCSoxxir8Bl1"];
    }

    function isOwner(userId) {
      // Check if the requesting user is the owner of the document.
      return request.auth.uid == userId;
    }

    // Publicly readable collections
    match /products/{productId} {
      allow read: if true;
      allow write: if isAdmin(); // Admins can create, update, delete
    }

    match /services/{serviceId} {
      allow read: if true;
      allow write: if isAdmin();
    }

    match /offers/{offerId} {
      allow read: if true;
      allow write: if isAdmin();
    }
    
    // Enquiries can be created by anyone, but only read/updated/deleted by admins.
    match /enquiries/{enquiryId} {
      allow create: if true;
      allow read, update, delete: if isAdmin();
    }

    // User-specific data
    match /users/{userId} {
      // A user can create their own document upon signup.
      allow create: if isOwner(userId);
      
      // Admins can read any user profile. Users can only read their own.
      allow read: if isOwner(userId) || isAdmin();
      
      // Users can update their own display name and phone number.
      // Admins can update a user's account status.
      allow update: if (isOwner(userId) && request.resource.data.keys().hasAny(['displayName', 'phone', 'lastLoginAt'])) ||
                       (isAdmin() && request.resource.data.keys().hasOnly(['accountStatus']));

      // Subcollections
      
      // Addresses: User can manage their own addresses. Admins can view them.
      match /addresses/{addressId} {
        allow read, write: if isOwner(userId);
        allow list: if isOwner(userId) || isAdmin();
      }

      // Appointments: User can create/read their own. Admins can update status.
      match /appointments/{appointmentId} {
        allow create, read: if isOwner(userId);
        allow update: if (isOwner(userId) && request.resource.data.keys().hasAny(['status', 'paymentId', 'pricePaid'])) ||
                         (isAdmin() && request.resource.data.keys().hasOnly(['status']));
        // No delete for record keeping
        allow delete: if false;
      }
      
      // Orders: User can create/read their own. Admins can update status.
      match /orders/{orderId} {
        allow create, read: if isOwner(userId);
        allow update, delete: if isAdmin(); // Admin can update status (e.g. shipped) or delete
      }
    }
    
    // Collection Group rules for admin panel
    match /{path=**}/appointments/{appointmentId} {
        // Admins can read all appointments from any user for the admin dashboard.
        allow read: if isAdmin();
    }
  }
}
