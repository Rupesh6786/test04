rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Helper function to check for admin role
    function isAdmin() {
      return request.auth.uid in ["2A71uIHMVPXVcp4zSCSoxxir8Bl1"];
    }

    // Products: Publicly readable, admin-only write.
    // Exception: Any logged-in user can decrement stock by 1 during a purchase transaction.
    match /products/{productId} {
      allow read: if true;
      allow create, delete: if isAdmin();
      allow update: if isAdmin() || 
                       (request.auth != null &&
                        request.resource.data.stock == resource.data.stock - 1 &&
                        // Ensure only the stock is being changed during a user transaction.
                        request.resource.data.diff(resource.data).affectedKeys.hasOnly(['stock']));
    }

    // Users: Users can read/write their own data. Admins can read anyone's data.
    match /users/{userId} {
      allow read, update, write: if request.auth.uid == userId || isAdmin();
      
      // Subcollections: Only the user or an admin can access these.
      match /appointments/{appointmentId} {
        allow read, write: if request.auth.uid == userId || isAdmin();
      }
      match /addresses/{addressId} {
        allow read, write: if request.auth.uid == userId || isAdmin();
      }
      match /orders/{orderId} {
        allow read, write: if request.auth.uid == userId || isAdmin();
      }
    }
    
    // Services, Offers: Read for all, write for admin.
    match /services/{serviceId} {
      allow read: if true;
      allow write: if isAdmin();
    }
    
    match /offers/{offerId} {
      allow read: if true;
      allow write: if isAdmin();
    }
    
    // Enquiries: Allow anyone to create (submit form), admin to manage.
    match /enquiries/{enquiryId} {
      allow create: if true;
      allow read, update, delete: if isAdmin();
    }
  }
}
