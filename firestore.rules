
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // Helper function to check for admin role
    function isAdmin() {
      return request.auth.uid in ["2A71uIHMVPXVcp4zSCSoxxir8Bl1"];
    }

    // Rules for the 'users' collection
    match /users/{userId} {
      // Any authenticated user can create their own user document
      allow create: if request.auth.uid != null;
      
      // Users can only read or update their own document
      allow read, update: if request.auth.uid == userId;
      
      // Admins can read any user document
      allow get: if isAdmin();
      allow list: if isAdmin();

      // Rules for appointments subcollection
      collection appointments {
        // Users can create/read their own appointments
        allow create, list, get: if request.auth.uid == userId;
        
        // Users can update their own appointments if they are only paying (status change to Confirmed)
        allow update: if request.auth.uid == userId &&
                      request.resource.data.status == "Confirmed" &&
                      resource.data.status == "Payment Pending";
                      
        // Admins can manage any appointment
        allow read, write: if isAdmin();
      }

      // Rules for orders subcollection
      collection orders {
        // Allow user to create and view their own orders
        allow list: if request.auth.uid == userId;
        allow get: if request.auth.uid == userId;

        // Allow create only if the incoming data matches specific criteria
        allow create: if request.auth.uid == userId
                      && request.resource.data.userId == userId
                      && request.resource.data.productId is string
                      && request.resource.data.productDetails is map
                      && request.resource.data.shippingAddress is map
                      && request.resource.data.status in ['Placed', 'Confirmed']
                      && request.resource.data.paymentMethod in ['Online', 'COD']
                      && request.resource.data.pricePaid is number
                      // COD specific checks
                      && (request.resource.data.paymentMethod == 'COD'
                          ? request.resource.data.status == 'Placed'
                            && request.resource.data.pricePaid == 0
                            && !('paymentId' in request.resource.data)
                          : true
                         )
                      // Online payment specific checks
                      && (request.resource.data.paymentMethod == 'Online'
                          ? request.resource.data.status == 'Confirmed'
                            && request.resource.data.pricePaid > 0
                            && request.resource.data.paymentId is string
                          : true
                         );

        // Allow admin to read/write any order for management
        allow read, write: if isAdmin();
      }

      // Rules for addresses subcollection
      collection addresses {
         allow read, create, delete: if request.auth.uid == userId;
         // Allow admin to read any address
         allow get, list: if isAdmin();
      }
    }

    // Rules for 'products' collection
    match /products/{productId} {
      allow read;
      
      // Allow create, delete only for admins
      allow create, delete: if isAdmin();
      
      // Allow updates for stock reduction by a logged-in user
      allow update: if isAdmin() || (
        request.auth.uid != null &&
        request.resource.data.stock == resource.data.stock - 1 &&
        request.resource.data.diff(resource.data).affectedKeys().hasOnly(['stock'])
      );
    }

    // Rules for 'services' collection
    match /services/{serviceId} {
        allow read;
        // Only admins can create, update, or delete services
        allow write: if isAdmin();
    }
    
    // Rules for 'offers' collection
    match /offers/{offerId} {
        allow read;
        // Only admins can manage offers
        allow write: if isAdmin();
    }

    // Rules for 'enquiries' collection
    match /enquiries/{enquiryId} {
        // Any user (even unauthenticated) can create an enquiry
        allow create;
        // Only admins can read or manage enquiries
        allow read, write: if isAdmin();
    }
    
    // Default deny all other reads/writes
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
